After setting up the working environment, we will execute the process using a job scheduler based on SLURM.

To accomplish this, we will navigate to the directory containing the raw data (raw_data) and create two new files: trimmomatic_job.sh and auto_trim.sh.

The trimmomatic_job.sh file is a job script that provides detailed execution instructions to the server. The auto_trim.sh file is a Python script that automates the execution of Trimmomatic. 
Although adapted, this script was originally written in Python and can be accessed here: GitHub repository-  https://github.com/lakhujanivijay/I-Shell-Do-This/tree/master/automation_of_trimmomatic

Please make sure to reference the developers in your study.

####################################################################################################################################################
Exemplo of "job". 

#Trimmomatic_job.sh Github : https://github.com/TiagoBelintani/Trim_UCE_reads_trimmmomatic/blob/main/trimmomatic_job.sh


Instructions for Path Modification
To execute this script, make sure to change the paths in the following lines:

Line 8: Modify the path to the Conda environment if necessary. The current path is /home/tiagobelintani/miniconda3/envs/phylogenetic.
Line 11: Update the INPUT_DIR variable to the directory where your raw data files are stored.
Line 14: Set the OUTPUT_DIR variable to the directory where you want the trimmed data to be saved.
Line 15: Ensure that the path to auto_trim.sh is correct. If the script is not in the same directory as this SLURM script, provide the full path.
Make sure these paths match your actual file locations and environment before running the script.

Detailed Explanation
SLURM Header:

#!/bin/bash: Defines the interpreter to be used.
#SBATCH -t 20:00:00: Sets the maximum job runtime (20 hours).
#SBATCH -c 40: Sets the number of CPU cores per task.
#SBATCH --mail-user=tiago.belintani@unesp.br: Defines the email address for notifications.
#SBATCH --mail-type=ALL: Specifies the types of email notifications to be sent (ALL sends notifications at the start, end, and in case of failures).
Load and Activate Environment:

module load miniconda/3-2023-09: Loads the Miniconda module.
source activate /home/tiagobelintani/miniconda3/envs/phylogenetic: Activates the desired Conda environment.
Define Directories:

INPUT_DIR: Directory where the input files are located.
OUTPUT_DIR: Directory where the processed files will be saved.
Create Output Directory:

mkdir -p $OUTPUT_DIR: Creates the output directory if it does not already exist.
Get List of Files:

FILES=($INPUT_DIR/*.fastq.gz): Retrieves the list of .fastq.gz files in the input directory.
Check for Files:

Checks if files were found and prints an error message if no files are found.
Execute Processing Script:

source /path/to/auto_trim.sh "${FILES[@]}": Executes the auto_trim.sh script, passing all found files as arguments. Replace /path/to/auto_trim.sh with the actual path to the script.
Customization
Path to auto_trim.sh: Make sure the path to the auto_trim.sh script is correct. If the script is in the same directory as the SLURM script, you can use source auto_trim.sh directly.

Computational Resources: Adjust SLURM parameters (-t and -c) as needed for your specific job.

####################################################################################################################################################
auto_trim.sh


